scalar DateTime

type User {
  id: String!
  email: String!
  username: String
  photo: String!
  createdAt: DateTime
  """
  Relation for messages
  """
  messages: [Message]
}

type SearchedUser {
  id: String!
  username: String!
  photo: String!
}

input CreateUserInput {
  email: String!
  username: String
  photo: String!
}

input UpdateUserInput {
  email: String
  username: String
}

input CreateUsernameInput {
  username: String!
}

type Query {
  searchUsers(username: String!): [SearchedUser]
  user(id: String!): User
  me: User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  createUsername(createUsernameInput: CreateUsernameInput!): AuthResponse!
  removeUser(id: String!): User
}
