// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  email          String         @unique
  username       String?        @unique
  createdAt      DateTime       @default(now())
  photo          String
  // Relations
  conversations  Conversation[]
  conversationId String?
  messages       Message[]
  messageId      String?
}

model Conversation {
  id             String   @id @default(uuid())
  unreadMessages Int      @default(0)
  createdAt      DateTime @default(now())

  // Relations  
  messages      Message[]
  // @TODO: зробити так, як в тг, можна помічати conservation без повідомлень, і тоді загальна кількість
  // повідомлень буде включати тільки ті, де unreadMessages!==0
  participants  User[]
  lastMessage   Message?  @relation(name: "lastConversationMessage", fields: [lastMessageId], references: [id])
  lastMessageId String?   @unique
}

model Message {
  id             String        @id @default(uuid())
  text           String
  // if message edited, set isEdited:true 
  // or just check updatedAt date
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  // Relations
  isLastIn       Conversation? @relation("lastConversationMessage")
  conversation   Conversation  @relation(fields: [conversationId], references: [id])
  conversationId String
  sender         User          @relation(fields: [senderId], references: [id])
  senderId       String
  isRead         Boolean       @default(false)
}
